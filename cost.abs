module ABS;
interface DL
{
    Int check();
}
class DL implements DL
{
    Int check()
    {
        Int i=0;
        while(i<10){
            consTime(1);
            i = i+1;
        }
        //consTime(10);
        return 0;
    }
}
interface IJK
{
    Int jkl(ABC a, IJK k);
}
class IJK implements IJK
{
    Int jkl(ABC a, IJK k)
    {
        Int i=0;
        while(i<10){
            consTime(1);
            i = i+1;
        }
        return 0;
    }
}
interface ABC
{
    Int xyz(ABC a,ABC b,IJK c,String x);
    Int efg(ABC j);
}
class ABC implements ABC
{
    Int xyz(ABC a,ABC b,IJK c,String x)
    {
        ABC o = new ABC();
        Int x1 = 0;
        Fut<Int> f; Fut<Int> f1; Fut<Int> f2;
        //consTime(15);
        //consTime(5);
        f = !jkl(c,a,c) after dl 5;
        f1 = !jkl(c,a,c) after dl 5;
        //f2 = !efg(this,o) after f&f1 dl 3;
        //f3 = !efg(this,o) after f&f2 dl 3;
        return 0;
    }
    Int efg(ABC j)
    {
        return 0;
    }
}
{
    DL o = new DL();
    Fut<Int> f;
    consTime(5);
    f = !check(o) after dl 11;
    await f?;
}
