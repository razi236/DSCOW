module RPL;
export Quality;

import * from ABS.StdLib;

data RC = RC(Int rc);

data Quality = ResEfficiency(Int)| Int| ResCost(Int cst)| ResCapacity(Int)| Ferry| Doctor| SmokeMask| PoliceMan| Clerk| EODTech| FireFighter| FireExt| FirstAidBox;

interface DL {
  Int check();
  Int check1();}

class DLD implements DL {
  Int x = 20;
  Int y = 10;
  Int check(){
    Int fake = 0;
    Int i = 0;
    
    [wait(this.x)] fake = 0;
    Pair<List<Int>, Int> p = Pair(Nil,0);
    [p == acquire(set(res(25,firefighter),res(25,firefighter),res(25,firefighter),res(25,firefighter)))] fake = 0;
    [p == release()] fake = 0;
    
    Int method_end = 0;
    return 0;
  }
  Int check1(){
    Int fake = 0;
    Int i = 0;
    
    [wait(this.y)] fake = 0;
    
    Int method_end = 0;
    return 0;
  }
  }






interface Main{
Unit main( );
}
class IMain implements Main{
Unit main( ){
  Int fake = 0;
  DL o = new DLD();
  Fut<Int> f1;
  Fut<Int> f2;
  Int x = 0;
  Int y = 0;
  
  x = o.check();
  
  await f1?;
  f2 = o!check1();
  
  await f1?;
  y = f2.get;
  println("RplTools");
  Int method_end = 0;
}
}
{
Main m = new IMain();
m ! main();
}

